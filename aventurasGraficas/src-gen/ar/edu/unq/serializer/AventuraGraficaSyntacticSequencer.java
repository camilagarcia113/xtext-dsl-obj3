/*
 * generated by Xtext
 */
package ar.edu.unq.serializer;

import ar.edu.unq.services.AventuraGraficaGrammarAccess;
import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class AventuraGraficaSyntacticSequencer extends AbstractSyntacticSequencer {

	protected AventuraGraficaGrammarAccess grammarAccess;
	protected AbstractElementAlias match_EjecutarAccion_AKeyword_0_2_0_or_ALaKeyword_0_2_2_or_AlKeyword_0_2_1;
	protected AbstractElementAlias match_Habitacion_ObjetosKeyword_8_0_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (AventuraGraficaGrammarAccess) access;
		match_EjecutarAccion_AKeyword_0_2_0_or_ALaKeyword_0_2_2_or_AlKeyword_0_2_1 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getEjecutarAccionAccess().getAKeyword_0_2_0()), new TokenAlias(false, false, grammarAccess.getEjecutarAccionAccess().getALaKeyword_0_2_2()), new TokenAlias(false, false, grammarAccess.getEjecutarAccionAccess().getAlKeyword_0_2_1()));
		match_Habitacion_ObjetosKeyword_8_0_q = new TokenAlias(false, true, grammarAccess.getHabitacionAccess().getObjetosKeyword_8_0());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if(match_EjecutarAccion_AKeyword_0_2_0_or_ALaKeyword_0_2_2_or_AlKeyword_0_2_1.equals(syntax))
				emit_EjecutarAccion_AKeyword_0_2_0_or_ALaKeyword_0_2_2_or_AlKeyword_0_2_1(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Habitacion_ObjetosKeyword_8_0_q.equals(syntax))
				emit_Habitacion_ObjetosKeyword_8_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'a' | 'al' | 'a la'
	 *
	 * This ambiguous syntax occurs at:
	 *     accion=[IrA|ID] (ambiguity) objeto=[Objeto|ID]
	 */
	protected void emit_EjecutarAccion_AKeyword_0_2_0_or_ALaKeyword_0_2_2_or_AlKeyword_0_2_1(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'objetos'?
	 *
	 * This ambiguous syntax occurs at:
	 *     descripcion=STRING (ambiguity) (rule end)
	 *     valorNuevo=STRING (ambiguity) (rule end)
	 */
	protected void emit_Habitacion_ObjetosKeyword_8_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
