/*
 * generated by Xtext
 */
package ar.edu.unq.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AventuraGraficaGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class JuegoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Juego");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cObjetosAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cObjetosObjetoParserRuleCall_0_0 = (RuleCall)cObjetosAssignment_0.eContents().get(0);
		private final Assignment cPosicionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPosicionPosicionParserRuleCall_1_0 = (RuleCall)cPosicionAssignment_1.eContents().get(0);
		private final Assignment cHabitacionesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHabitacionesHabitacionParserRuleCall_2_0 = (RuleCall)cHabitacionesAssignment_2.eContents().get(0);
		private final Assignment cComandosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cComandosComandoParserRuleCall_3_0 = (RuleCall)cComandosAssignment_3.eContents().get(0);
		
		//Juego:
		//	objetos+=Objeto* posicion=Posicion habitaciones+=Habitacion* comandos+=Comando*;
		@Override public ParserRule getRule() { return rule; }

		//objetos+=Objeto* posicion=Posicion habitaciones+=Habitacion* comandos+=Comando*
		public Group getGroup() { return cGroup; }

		//objetos+=Objeto*
		public Assignment getObjetosAssignment_0() { return cObjetosAssignment_0; }

		//Objeto
		public RuleCall getObjetosObjetoParserRuleCall_0_0() { return cObjetosObjetoParserRuleCall_0_0; }

		//posicion=Posicion
		public Assignment getPosicionAssignment_1() { return cPosicionAssignment_1; }

		//Posicion
		public RuleCall getPosicionPosicionParserRuleCall_1_0() { return cPosicionPosicionParserRuleCall_1_0; }

		//habitaciones+=Habitacion*
		public Assignment getHabitacionesAssignment_2() { return cHabitacionesAssignment_2; }

		//Habitacion
		public RuleCall getHabitacionesHabitacionParserRuleCall_2_0() { return cHabitacionesHabitacionParserRuleCall_2_0; }

		//comandos+=Comando*
		public Assignment getComandosAssignment_3() { return cComandosAssignment_3; }

		//Comando
		public RuleCall getComandosComandoParserRuleCall_3_0() { return cComandosComandoParserRuleCall_3_0; }
	}

	public class ObjetoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Objeto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjetoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRecogibleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cRecogibleRecogibleKeyword_1_0 = (Keyword)cRecogibleAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescripcionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescripcionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescripcionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescripcionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTieneKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEstadoAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEstadoEstadoDeObjetoParserRuleCall_4_1_0 = (RuleCall)cEstadoAssignment_4_1.eContents().get(0);
		private final Assignment cAccionesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAccionesAccionParserRuleCall_5_0 = (RuleCall)cAccionesAssignment_5.eContents().get(0);
		
		//Objeto:
		//	"objeto" recogible?="recogible"? name=ID //		'recogible:' (recogible?= 'si' | 'no')
		//	("descripcion" descripcion=STRING)? ("tiene" estado=EstadoDeObjeto)? acciones+=Accion*;
		@Override public ParserRule getRule() { return rule; }

		//"objeto" recogible?="recogible"? name=ID //		'recogible:' (recogible?= 'si' | 'no')
		//("descripcion" descripcion=STRING)? ("tiene" estado=EstadoDeObjeto)? acciones+=Accion*
		public Group getGroup() { return cGroup; }

		//"objeto"
		public Keyword getObjetoKeyword_0() { return cObjetoKeyword_0; }

		//recogible?="recogible"?
		public Assignment getRecogibleAssignment_1() { return cRecogibleAssignment_1; }

		//"recogible"
		public Keyword getRecogibleRecogibleKeyword_1_0() { return cRecogibleRecogibleKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("descripcion" descripcion=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"descripcion"
		public Keyword getDescripcionKeyword_3_0() { return cDescripcionKeyword_3_0; }

		//descripcion=STRING
		public Assignment getDescripcionAssignment_3_1() { return cDescripcionAssignment_3_1; }

		//STRING
		public RuleCall getDescripcionSTRINGTerminalRuleCall_3_1_0() { return cDescripcionSTRINGTerminalRuleCall_3_1_0; }

		//("tiene" estado=EstadoDeObjeto)?
		public Group getGroup_4() { return cGroup_4; }

		//"tiene"
		public Keyword getTieneKeyword_4_0() { return cTieneKeyword_4_0; }

		//estado=EstadoDeObjeto
		public Assignment getEstadoAssignment_4_1() { return cEstadoAssignment_4_1; }

		//EstadoDeObjeto
		public RuleCall getEstadoEstadoDeObjetoParserRuleCall_4_1_0() { return cEstadoEstadoDeObjetoParserRuleCall_4_1_0; }

		//acciones+=Accion*
		public Assignment getAccionesAssignment_5() { return cAccionesAssignment_5; }

		//Accion
		public RuleCall getAccionesAccionParserRuleCall_5_0() { return cAccionesAccionParserRuleCall_5_0; }
	}

	public class HabitacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Habitacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHabitacionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFinalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFinalFinalKeyword_1_0 = (Keyword)cFinalAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cAlIngresarKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cMostrarKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescripcionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescripcionSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescripcionAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cHyphenMinusKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cCambiarElKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cEstadoACambiarAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cEstadoACambiarSTRINGTerminalRuleCall_7_2_0 = (RuleCall)cEstadoACambiarAssignment_7_2.eContents().get(0);
		private final Keyword cDeKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Assignment cObjetoACambiarAssignment_7_4 = (Assignment)cGroup_7.eContents().get(4);
		private final CrossReference cObjetoACambiarObjetoCrossReference_7_4_0 = (CrossReference)cObjetoACambiarAssignment_7_4.eContents().get(0);
		private final RuleCall cObjetoACambiarObjetoIDTerminalRuleCall_7_4_0_1 = (RuleCall)cObjetoACambiarObjetoCrossReference_7_4_0.eContents().get(1);
		private final Keyword cAlValorKeyword_7_5 = (Keyword)cGroup_7.eContents().get(5);
		private final Assignment cValorNuevoAssignment_7_6 = (Assignment)cGroup_7.eContents().get(6);
		private final RuleCall cValorNuevoSTRINGTerminalRuleCall_7_6_0 = (RuleCall)cValorNuevoAssignment_7_6.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cObjetosKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cGroup_8.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_8_1_0 = (Keyword)cGroup_8_1.eContents().get(0);
		private final Assignment cObjetosAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final CrossReference cObjetosObjetoCrossReference_8_1_1_0 = (CrossReference)cObjetosAssignment_8_1_1.eContents().get(0);
		private final RuleCall cObjetosObjetoIDTerminalRuleCall_8_1_1_0_1 = (RuleCall)cObjetosObjetoCrossReference_8_1_1_0.eContents().get(1);
		
		//Habitacion:
		//	"habitacion" final?="final"? name=ID //		('final:' (final?= 'si' | 'no'))?
		//	"al ingresar" "-" "mostrar" descripcion=STRING ("-" "cambiar el" estadoACambiar=STRING / *estado=[EstadoDeObjeto]* / "de"
		//	objetoACambiar=[Objeto] "al valor" valorNuevo=STRING)? ("objetos" ("-" objetos+=[Objeto])*)?;
		@Override public ParserRule getRule() { return rule; }

		//"habitacion" final?="final"? name=ID //		('final:' (final?= 'si' | 'no'))?
		//"al ingresar" "-" "mostrar" descripcion=STRING ("-" "cambiar el" estadoACambiar=STRING / *estado=[EstadoDeObjeto]* / "de"
		//objetoACambiar=[Objeto] "al valor" valorNuevo=STRING)? ("objetos" ("-" objetos+=[Objeto])*)?
		public Group getGroup() { return cGroup; }

		//"habitacion"
		public Keyword getHabitacionKeyword_0() { return cHabitacionKeyword_0; }

		//final?="final"?
		public Assignment getFinalAssignment_1() { return cFinalAssignment_1; }

		//"final"
		public Keyword getFinalFinalKeyword_1_0() { return cFinalFinalKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		////		('final:' (final?= 'si' | 'no'))?
		//"al ingresar"
		public Keyword getAlIngresarKeyword_3() { return cAlIngresarKeyword_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_4() { return cHyphenMinusKeyword_4; }

		//"mostrar"
		public Keyword getMostrarKeyword_5() { return cMostrarKeyword_5; }

		//descripcion=STRING
		public Assignment getDescripcionAssignment_6() { return cDescripcionAssignment_6; }

		//STRING
		public RuleCall getDescripcionSTRINGTerminalRuleCall_6_0() { return cDescripcionSTRINGTerminalRuleCall_6_0; }

		//("-" "cambiar el" estadoACambiar=STRING / *estado=[EstadoDeObjeto]* / "de" objetoACambiar=[Objeto] "al valor"
		//valorNuevo=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"-"
		public Keyword getHyphenMinusKeyword_7_0() { return cHyphenMinusKeyword_7_0; }

		//"cambiar el"
		public Keyword getCambiarElKeyword_7_1() { return cCambiarElKeyword_7_1; }

		//estadoACambiar=STRING
		public Assignment getEstadoACambiarAssignment_7_2() { return cEstadoACambiarAssignment_7_2; }

		//STRING
		public RuleCall getEstadoACambiarSTRINGTerminalRuleCall_7_2_0() { return cEstadoACambiarSTRINGTerminalRuleCall_7_2_0; }

		/// *estado=[EstadoDeObjeto]* / "de"
		public Keyword getDeKeyword_7_3() { return cDeKeyword_7_3; }

		//objetoACambiar=[Objeto]
		public Assignment getObjetoACambiarAssignment_7_4() { return cObjetoACambiarAssignment_7_4; }

		//[Objeto]
		public CrossReference getObjetoACambiarObjetoCrossReference_7_4_0() { return cObjetoACambiarObjetoCrossReference_7_4_0; }

		//ID
		public RuleCall getObjetoACambiarObjetoIDTerminalRuleCall_7_4_0_1() { return cObjetoACambiarObjetoIDTerminalRuleCall_7_4_0_1; }

		//"al valor"
		public Keyword getAlValorKeyword_7_5() { return cAlValorKeyword_7_5; }

		//valorNuevo=STRING
		public Assignment getValorNuevoAssignment_7_6() { return cValorNuevoAssignment_7_6; }

		//STRING
		public RuleCall getValorNuevoSTRINGTerminalRuleCall_7_6_0() { return cValorNuevoSTRINGTerminalRuleCall_7_6_0; }

		//("objetos" ("-" objetos+=[Objeto])*)?
		public Group getGroup_8() { return cGroup_8; }

		//"objetos"
		public Keyword getObjetosKeyword_8_0() { return cObjetosKeyword_8_0; }

		//("-" objetos+=[Objeto])*
		public Group getGroup_8_1() { return cGroup_8_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_8_1_0() { return cHyphenMinusKeyword_8_1_0; }

		//objetos+=[Objeto]
		public Assignment getObjetosAssignment_8_1_1() { return cObjetosAssignment_8_1_1; }

		//[Objeto]
		public CrossReference getObjetosObjetoCrossReference_8_1_1_0() { return cObjetosObjetoCrossReference_8_1_1_0; }

		//ID
		public RuleCall getObjetosObjetoIDTerminalRuleCall_8_1_1_0_1() { return cObjetosObjetoIDTerminalRuleCall_8_1_1_0_1; }
	}

	public class PosicionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Posicion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIniciarEnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cHabitacionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cHabitacionHabitacionCrossReference_1_0 = (CrossReference)cHabitacionAssignment_1.eContents().get(0);
		private final RuleCall cHabitacionHabitacionIDTerminalRuleCall_1_0_1 = (RuleCall)cHabitacionHabitacionCrossReference_1_0.eContents().get(1);
		
		//Posicion:
		//	"iniciar en" habitacion=[Habitacion];
		@Override public ParserRule getRule() { return rule; }

		//"iniciar en" habitacion=[Habitacion]
		public Group getGroup() { return cGroup; }

		//"iniciar en"
		public Keyword getIniciarEnKeyword_0() { return cIniciarEnKeyword_0; }

		//habitacion=[Habitacion]
		public Assignment getHabitacionAssignment_1() { return cHabitacionAssignment_1; }

		//[Habitacion]
		public CrossReference getHabitacionHabitacionCrossReference_1_0() { return cHabitacionHabitacionCrossReference_1_0; }

		//ID
		public RuleCall getHabitacionHabitacionIDTerminalRuleCall_1_0_1() { return cHabitacionHabitacionIDTerminalRuleCall_1_0_1; }
	}

	public class ComandoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Comando");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMostrarObjetosParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDescribirObjetoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRecogerObjetoParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMostrarInventarioParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAccionesParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEjecutarAccionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Comando:
		//	MostrarObjetos | DescribirObjeto | RecogerObjeto | MostrarInventario | Acciones | EjecutarAccion;
		@Override public ParserRule getRule() { return rule; }

		//MostrarObjetos | DescribirObjeto | RecogerObjeto | MostrarInventario | Acciones | EjecutarAccion
		public Alternatives getAlternatives() { return cAlternatives; }

		//MostrarObjetos
		public RuleCall getMostrarObjetosParserRuleCall_0() { return cMostrarObjetosParserRuleCall_0; }

		//DescribirObjeto
		public RuleCall getDescribirObjetoParserRuleCall_1() { return cDescribirObjetoParserRuleCall_1; }

		//RecogerObjeto
		public RuleCall getRecogerObjetoParserRuleCall_2() { return cRecogerObjetoParserRuleCall_2; }

		//MostrarInventario
		public RuleCall getMostrarInventarioParserRuleCall_3() { return cMostrarInventarioParserRuleCall_3; }

		//Acciones
		public RuleCall getAccionesParserRuleCall_4() { return cAccionesParserRuleCall_4; }

		//EjecutarAccion
		public RuleCall getEjecutarAccionParserRuleCall_5() { return cEjecutarAccionParserRuleCall_5; }
	}

	public class MostrarObjetosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MostrarObjetos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjetosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cMostrarObjetosAction_1 = (Action)cGroup.eContents().get(1);
		
		//MostrarObjetos:
		//	"objetos ?" {MostrarObjetos};
		@Override public ParserRule getRule() { return rule; }

		//"objetos ?" {MostrarObjetos}
		public Group getGroup() { return cGroup; }

		//"objetos ?"
		public Keyword getObjetosKeyword_0() { return cObjetosKeyword_0; }

		//{MostrarObjetos}
		public Action getMostrarObjetosAction_1() { return cMostrarObjetosAction_1; }
	}

	public class DescribirObjetoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DescribirObjeto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescribirKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjetoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjetoObjetoCrossReference_1_0 = (CrossReference)cObjetoAssignment_1.eContents().get(0);
		private final RuleCall cObjetoObjetoIDTerminalRuleCall_1_0_1 = (RuleCall)cObjetoObjetoCrossReference_1_0.eContents().get(1);
		
		//DescribirObjeto:
		//	"describir" objeto=[Objeto];
		@Override public ParserRule getRule() { return rule; }

		//"describir" objeto=[Objeto]
		public Group getGroup() { return cGroup; }

		//"describir"
		public Keyword getDescribirKeyword_0() { return cDescribirKeyword_0; }

		//objeto=[Objeto]
		public Assignment getObjetoAssignment_1() { return cObjetoAssignment_1; }

		//[Objeto]
		public CrossReference getObjetoObjetoCrossReference_1_0() { return cObjetoObjetoCrossReference_1_0; }

		//ID
		public RuleCall getObjetoObjetoIDTerminalRuleCall_1_0_1() { return cObjetoObjetoIDTerminalRuleCall_1_0_1; }
	}

	public class RecogerObjetoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RecogerObjeto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRecogerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjetoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjetoObjetoCrossReference_1_0 = (CrossReference)cObjetoAssignment_1.eContents().get(0);
		private final RuleCall cObjetoObjetoIDTerminalRuleCall_1_0_1 = (RuleCall)cObjetoObjetoCrossReference_1_0.eContents().get(1);
		
		//RecogerObjeto:
		//	"recoger" objeto=[Objeto];
		@Override public ParserRule getRule() { return rule; }

		//"recoger" objeto=[Objeto]
		public Group getGroup() { return cGroup; }

		//"recoger"
		public Keyword getRecogerKeyword_0() { return cRecogerKeyword_0; }

		//objeto=[Objeto]
		public Assignment getObjetoAssignment_1() { return cObjetoAssignment_1; }

		//[Objeto]
		public CrossReference getObjetoObjetoCrossReference_1_0() { return cObjetoObjetoCrossReference_1_0; }

		//ID
		public RuleCall getObjetoObjetoIDTerminalRuleCall_1_0_1() { return cObjetoObjetoIDTerminalRuleCall_1_0_1; }
	}

	public class MostrarInventarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MostrarInventario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInventarioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cMostrarInventarioAction_1 = (Action)cGroup.eContents().get(1);
		
		//MostrarInventario:
		//	"inventario ?" {MostrarInventario};
		@Override public ParserRule getRule() { return rule; }

		//"inventario ?" {MostrarInventario}
		public Group getGroup() { return cGroup; }

		//"inventario ?"
		public Keyword getInventarioKeyword_0() { return cInventarioKeyword_0; }

		//{MostrarInventario}
		public Action getMostrarInventarioAction_1() { return cMostrarInventarioAction_1; }
	}

	public class AccionesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Acciones");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAccionesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cObjetoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjetoObjetoCrossReference_1_0 = (CrossReference)cObjetoAssignment_1.eContents().get(0);
		private final RuleCall cObjetoObjetoIDTerminalRuleCall_1_0_1 = (RuleCall)cObjetoObjetoCrossReference_1_0.eContents().get(1);
		private final Keyword cQuestionMarkKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Acciones:
		//	"acciones" objeto=[Objeto] "?";
		@Override public ParserRule getRule() { return rule; }

		//"acciones" objeto=[Objeto] "?"
		public Group getGroup() { return cGroup; }

		//"acciones"
		public Keyword getAccionesKeyword_0() { return cAccionesKeyword_0; }

		//objeto=[Objeto]
		public Assignment getObjetoAssignment_1() { return cObjetoAssignment_1; }

		//[Objeto]
		public CrossReference getObjetoObjetoCrossReference_1_0() { return cObjetoObjetoCrossReference_1_0; }

		//ID
		public RuleCall getObjetoObjetoIDTerminalRuleCall_1_0_1() { return cObjetoObjetoIDTerminalRuleCall_1_0_1; }

		//"?"
		public Keyword getQuestionMarkKeyword_2() { return cQuestionMarkKeyword_2; }
	}

	public class EjecutarAccionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EjecutarAccion");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cAccionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cAccionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cAccionIrACrossReference_0_1_0 = (CrossReference)cAccionAssignment_0_1.eContents().get(0);
		private final RuleCall cAccionIrAIDTerminalRuleCall_0_1_0_1 = (RuleCall)cAccionIrACrossReference_0_1_0.eContents().get(1);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final Keyword cAKeyword_0_2_0 = (Keyword)cAlternatives_0_2.eContents().get(0);
		private final Keyword cAlKeyword_0_2_1 = (Keyword)cAlternatives_0_2.eContents().get(1);
		private final Keyword cALaKeyword_0_2_2 = (Keyword)cAlternatives_0_2.eContents().get(2);
		private final Assignment cObjetoAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final CrossReference cObjetoObjetoCrossReference_0_3_0 = (CrossReference)cObjetoAssignment_0_3.eContents().get(0);
		private final RuleCall cObjetoObjetoIDTerminalRuleCall_0_3_0_1 = (RuleCall)cObjetoObjetoCrossReference_0_3_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAccionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAccionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cAccionAccionCrossReference_1_1_0 = (CrossReference)cAccionAssignment_1_1.eContents().get(0);
		private final RuleCall cAccionAccionIDTerminalRuleCall_1_1_0_1 = (RuleCall)cAccionAccionCrossReference_1_1_0.eContents().get(1);
		private final Assignment cObjetoAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cObjetoObjetoCrossReference_1_2_0 = (CrossReference)cObjetoAssignment_1_2.eContents().get(0);
		private final RuleCall cObjetoObjetoIDTerminalRuleCall_1_2_0_1 = (RuleCall)cObjetoObjetoCrossReference_1_2_0.eContents().get(1);
		
		//EjecutarAccion:
		//	"accion" accion=[IrA] ("a" | "al" | "a la") objeto=[Objeto] | "accion" accion=[Accion] objeto=[Objeto];
		@Override public ParserRule getRule() { return rule; }

		//"accion" accion=[IrA] ("a" | "al" | "a la") objeto=[Objeto] | "accion" accion=[Accion] objeto=[Objeto]
		public Alternatives getAlternatives() { return cAlternatives; }

		//"accion" accion=[IrA] ("a" | "al" | "a la") objeto=[Objeto]
		public Group getGroup_0() { return cGroup_0; }

		//"accion"
		public Keyword getAccionKeyword_0_0() { return cAccionKeyword_0_0; }

		//accion=[IrA]
		public Assignment getAccionAssignment_0_1() { return cAccionAssignment_0_1; }

		//[IrA]
		public CrossReference getAccionIrACrossReference_0_1_0() { return cAccionIrACrossReference_0_1_0; }

		//ID
		public RuleCall getAccionIrAIDTerminalRuleCall_0_1_0_1() { return cAccionIrAIDTerminalRuleCall_0_1_0_1; }

		//"a" | "al" | "a la"
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }

		//"a"
		public Keyword getAKeyword_0_2_0() { return cAKeyword_0_2_0; }

		//"al"
		public Keyword getAlKeyword_0_2_1() { return cAlKeyword_0_2_1; }

		//"a la"
		public Keyword getALaKeyword_0_2_2() { return cALaKeyword_0_2_2; }

		//objeto=[Objeto]
		public Assignment getObjetoAssignment_0_3() { return cObjetoAssignment_0_3; }

		//[Objeto]
		public CrossReference getObjetoObjetoCrossReference_0_3_0() { return cObjetoObjetoCrossReference_0_3_0; }

		//ID
		public RuleCall getObjetoObjetoIDTerminalRuleCall_0_3_0_1() { return cObjetoObjetoIDTerminalRuleCall_0_3_0_1; }

		//"accion" accion=[Accion] objeto=[Objeto]
		public Group getGroup_1() { return cGroup_1; }

		//"accion"
		public Keyword getAccionKeyword_1_0() { return cAccionKeyword_1_0; }

		//accion=[Accion]
		public Assignment getAccionAssignment_1_1() { return cAccionAssignment_1_1; }

		//[Accion]
		public CrossReference getAccionAccionCrossReference_1_1_0() { return cAccionAccionCrossReference_1_1_0; }

		//ID
		public RuleCall getAccionAccionIDTerminalRuleCall_1_1_0_1() { return cAccionAccionIDTerminalRuleCall_1_1_0_1; }

		//objeto=[Objeto]
		public Assignment getObjetoAssignment_1_2() { return cObjetoAssignment_1_2; }

		//[Objeto]
		public CrossReference getObjetoObjetoCrossReference_1_2_0() { return cObjetoObjetoCrossReference_1_2_0; }

		//ID
		public RuleCall getObjetoObjetoIDTerminalRuleCall_1_2_0_1() { return cObjetoObjetoIDTerminalRuleCall_1_2_0_1; }
	}

	public class AccionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Accion");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIrAParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCambiarEstadoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Accion:
		//	IrA | CambiarEstado;
		@Override public ParserRule getRule() { return rule; }

		//IrA | CambiarEstado
		public Alternatives getAlternatives() { return cAlternatives; }

		//IrA
		public RuleCall getIrAParserRuleCall_0() { return cIrAParserRuleCall_0; }

		//CambiarEstado
		public RuleCall getCambiarEstadoParserRuleCall_1() { return cCambiarEstadoParserRuleCall_1; }
	}

	public class IrAElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IrA");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAccionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cHaceIrAKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHabitacionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cHabitacionHabitacionCrossReference_3_0 = (CrossReference)cHabitacionAssignment_3.eContents().get(0);
		private final RuleCall cHabitacionHabitacionIDTerminalRuleCall_3_0_1 = (RuleCall)cHabitacionHabitacionCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCuandoKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cVariableAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cVariableEstadoDeObjetoCrossReference_4_1_0 = (CrossReference)cVariableAssignment_4_1.eContents().get(0);
		private final RuleCall cVariableEstadoDeObjetoIDTerminalRuleCall_4_1_0_1 = (RuleCall)cVariableEstadoDeObjetoCrossReference_4_1_0.eContents().get(1);
		private final Keyword cEsKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cValorAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cValorSTRINGTerminalRuleCall_4_3_0 = (RuleCall)cValorAssignment_4_3.eContents().get(0);
		
		//IrA:
		//	"accion" name=ID "hace ir a" habitacion=[Habitacion] ("cuando" variable=[EstadoDeObjeto] "es" valor=STRING)?;
		@Override public ParserRule getRule() { return rule; }

		//"accion" name=ID "hace ir a" habitacion=[Habitacion] ("cuando" variable=[EstadoDeObjeto] "es" valor=STRING)?
		public Group getGroup() { return cGroup; }

		//"accion"
		public Keyword getAccionKeyword_0() { return cAccionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"hace ir a"
		public Keyword getHaceIrAKeyword_2() { return cHaceIrAKeyword_2; }

		//habitacion=[Habitacion]
		public Assignment getHabitacionAssignment_3() { return cHabitacionAssignment_3; }

		//[Habitacion]
		public CrossReference getHabitacionHabitacionCrossReference_3_0() { return cHabitacionHabitacionCrossReference_3_0; }

		//ID
		public RuleCall getHabitacionHabitacionIDTerminalRuleCall_3_0_1() { return cHabitacionHabitacionIDTerminalRuleCall_3_0_1; }

		//("cuando" variable=[EstadoDeObjeto] "es" valor=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"cuando"
		public Keyword getCuandoKeyword_4_0() { return cCuandoKeyword_4_0; }

		//variable=[EstadoDeObjeto]
		public Assignment getVariableAssignment_4_1() { return cVariableAssignment_4_1; }

		//[EstadoDeObjeto]
		public CrossReference getVariableEstadoDeObjetoCrossReference_4_1_0() { return cVariableEstadoDeObjetoCrossReference_4_1_0; }

		//ID
		public RuleCall getVariableEstadoDeObjetoIDTerminalRuleCall_4_1_0_1() { return cVariableEstadoDeObjetoIDTerminalRuleCall_4_1_0_1; }

		//"es"
		public Keyword getEsKeyword_4_2() { return cEsKeyword_4_2; }

		//valor=STRING
		public Assignment getValorAssignment_4_3() { return cValorAssignment_4_3; }

		//STRING
		public RuleCall getValorSTRINGTerminalRuleCall_4_3_0() { return cValorSTRINGTerminalRuleCall_4_3_0; }
	}

	public class CambiarEstadoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CambiarEstado");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAccionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cHaceCambiarElKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVariableACambiarAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cVariableACambiarEstadoDeObjetoCrossReference_3_0 = (CrossReference)cVariableACambiarAssignment_3.eContents().get(0);
		private final RuleCall cVariableACambiarEstadoDeObjetoIDTerminalRuleCall_3_0_1 = (RuleCall)cVariableACambiarEstadoDeObjetoCrossReference_3_0.eContents().get(1);
		private final Keyword cAlValorKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValorNuevoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValorNuevoSTRINGTerminalRuleCall_5_0 = (RuleCall)cValorNuevoAssignment_5.eContents().get(0);
		private final Keyword cCuandoKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVariableCondicionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cVariableCondicionEstadoDeObjetoCrossReference_7_0 = (CrossReference)cVariableCondicionAssignment_7.eContents().get(0);
		private final RuleCall cVariableCondicionEstadoDeObjetoIDTerminalRuleCall_7_0_1 = (RuleCall)cVariableCondicionEstadoDeObjetoCrossReference_7_0.eContents().get(1);
		private final Keyword cEsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValorCondicionalAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValorCondicionalSTRINGTerminalRuleCall_9_0 = (RuleCall)cValorCondicionalAssignment_9.eContents().get(0);
		
		//CambiarEstado:
		//	"accion" name=ID "hace cambiar el" variableACambiar=[EstadoDeObjeto] "al valor" valorNuevo=STRING "cuando"
		//	variableCondicion=[EstadoDeObjeto] "es" valorCondicional=STRING;
		@Override public ParserRule getRule() { return rule; }

		//"accion" name=ID "hace cambiar el" variableACambiar=[EstadoDeObjeto] "al valor" valorNuevo=STRING "cuando"
		//variableCondicion=[EstadoDeObjeto] "es" valorCondicional=STRING
		public Group getGroup() { return cGroup; }

		//"accion"
		public Keyword getAccionKeyword_0() { return cAccionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"hace cambiar el"
		public Keyword getHaceCambiarElKeyword_2() { return cHaceCambiarElKeyword_2; }

		//variableACambiar=[EstadoDeObjeto]
		public Assignment getVariableACambiarAssignment_3() { return cVariableACambiarAssignment_3; }

		//[EstadoDeObjeto]
		public CrossReference getVariableACambiarEstadoDeObjetoCrossReference_3_0() { return cVariableACambiarEstadoDeObjetoCrossReference_3_0; }

		//ID
		public RuleCall getVariableACambiarEstadoDeObjetoIDTerminalRuleCall_3_0_1() { return cVariableACambiarEstadoDeObjetoIDTerminalRuleCall_3_0_1; }

		//"al valor"
		public Keyword getAlValorKeyword_4() { return cAlValorKeyword_4; }

		//valorNuevo=STRING
		public Assignment getValorNuevoAssignment_5() { return cValorNuevoAssignment_5; }

		//STRING
		public RuleCall getValorNuevoSTRINGTerminalRuleCall_5_0() { return cValorNuevoSTRINGTerminalRuleCall_5_0; }

		//"cuando"
		public Keyword getCuandoKeyword_6() { return cCuandoKeyword_6; }

		//variableCondicion=[EstadoDeObjeto]
		public Assignment getVariableCondicionAssignment_7() { return cVariableCondicionAssignment_7; }

		//[EstadoDeObjeto]
		public CrossReference getVariableCondicionEstadoDeObjetoCrossReference_7_0() { return cVariableCondicionEstadoDeObjetoCrossReference_7_0; }

		//ID
		public RuleCall getVariableCondicionEstadoDeObjetoIDTerminalRuleCall_7_0_1() { return cVariableCondicionEstadoDeObjetoIDTerminalRuleCall_7_0_1; }

		//"es"
		public Keyword getEsKeyword_8() { return cEsKeyword_8; }

		//valorCondicional=STRING
		public Assignment getValorCondicionalAssignment_9() { return cValorCondicionalAssignment_9; }

		//STRING
		public RuleCall getValorCondicionalSTRINGTerminalRuleCall_9_0() { return cValorCondicionalSTRINGTerminalRuleCall_9_0; }
	}

	public class EstadoDeObjetoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EstadoDeObjeto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cConValorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValorSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cValorAssignment_1_1.eContents().get(0);
		
		//EstadoDeObjeto:
		//	name=ID ("con valor" valor=STRING)?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ("con valor" valor=STRING)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//("con valor" valor=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//"con valor"
		public Keyword getConValorKeyword_1_0() { return cConValorKeyword_1_0; }

		//valor=STRING
		public Assignment getValorAssignment_1_1() { return cValorAssignment_1_1; }

		//STRING
		public RuleCall getValorSTRINGTerminalRuleCall_1_1_0() { return cValorSTRINGTerminalRuleCall_1_1_0; }
	}
	
	
	private final JuegoElements pJuego;
	private final ObjetoElements pObjeto;
	private final HabitacionElements pHabitacion;
	private final PosicionElements pPosicion;
	private final ComandoElements pComando;
	private final MostrarObjetosElements pMostrarObjetos;
	private final DescribirObjetoElements pDescribirObjeto;
	private final RecogerObjetoElements pRecogerObjeto;
	private final MostrarInventarioElements pMostrarInventario;
	private final AccionesElements pAcciones;
	private final EjecutarAccionElements pEjecutarAccion;
	private final AccionElements pAccion;
	private final IrAElements pIrA;
	private final CambiarEstadoElements pCambiarEstado;
	private final EstadoDeObjetoElements pEstadoDeObjeto;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AventuraGraficaGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pJuego = new JuegoElements();
		this.pObjeto = new ObjetoElements();
		this.pHabitacion = new HabitacionElements();
		this.pPosicion = new PosicionElements();
		this.pComando = new ComandoElements();
		this.pMostrarObjetos = new MostrarObjetosElements();
		this.pDescribirObjeto = new DescribirObjetoElements();
		this.pRecogerObjeto = new RecogerObjetoElements();
		this.pMostrarInventario = new MostrarInventarioElements();
		this.pAcciones = new AccionesElements();
		this.pEjecutarAccion = new EjecutarAccionElements();
		this.pAccion = new AccionElements();
		this.pIrA = new IrAElements();
		this.pCambiarEstado = new CambiarEstadoElements();
		this.pEstadoDeObjeto = new EstadoDeObjetoElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ar.edu.unq.AventuraGrafica".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Juego:
	//	objetos+=Objeto* posicion=Posicion habitaciones+=Habitacion* comandos+=Comando*;
	public JuegoElements getJuegoAccess() {
		return pJuego;
	}
	
	public ParserRule getJuegoRule() {
		return getJuegoAccess().getRule();
	}

	//Objeto:
	//	"objeto" recogible?="recogible"? name=ID //		'recogible:' (recogible?= 'si' | 'no')
	//	("descripcion" descripcion=STRING)? ("tiene" estado=EstadoDeObjeto)? acciones+=Accion*;
	public ObjetoElements getObjetoAccess() {
		return pObjeto;
	}
	
	public ParserRule getObjetoRule() {
		return getObjetoAccess().getRule();
	}

	//Habitacion:
	//	"habitacion" final?="final"? name=ID //		('final:' (final?= 'si' | 'no'))?
	//	"al ingresar" "-" "mostrar" descripcion=STRING ("-" "cambiar el" estadoACambiar=STRING / *estado=[EstadoDeObjeto]* / "de"
	//	objetoACambiar=[Objeto] "al valor" valorNuevo=STRING)? ("objetos" ("-" objetos+=[Objeto])*)?;
	public HabitacionElements getHabitacionAccess() {
		return pHabitacion;
	}
	
	public ParserRule getHabitacionRule() {
		return getHabitacionAccess().getRule();
	}

	//Posicion:
	//	"iniciar en" habitacion=[Habitacion];
	public PosicionElements getPosicionAccess() {
		return pPosicion;
	}
	
	public ParserRule getPosicionRule() {
		return getPosicionAccess().getRule();
	}

	//Comando:
	//	MostrarObjetos | DescribirObjeto | RecogerObjeto | MostrarInventario | Acciones | EjecutarAccion;
	public ComandoElements getComandoAccess() {
		return pComando;
	}
	
	public ParserRule getComandoRule() {
		return getComandoAccess().getRule();
	}

	//MostrarObjetos:
	//	"objetos ?" {MostrarObjetos};
	public MostrarObjetosElements getMostrarObjetosAccess() {
		return pMostrarObjetos;
	}
	
	public ParserRule getMostrarObjetosRule() {
		return getMostrarObjetosAccess().getRule();
	}

	//DescribirObjeto:
	//	"describir" objeto=[Objeto];
	public DescribirObjetoElements getDescribirObjetoAccess() {
		return pDescribirObjeto;
	}
	
	public ParserRule getDescribirObjetoRule() {
		return getDescribirObjetoAccess().getRule();
	}

	//RecogerObjeto:
	//	"recoger" objeto=[Objeto];
	public RecogerObjetoElements getRecogerObjetoAccess() {
		return pRecogerObjeto;
	}
	
	public ParserRule getRecogerObjetoRule() {
		return getRecogerObjetoAccess().getRule();
	}

	//MostrarInventario:
	//	"inventario ?" {MostrarInventario};
	public MostrarInventarioElements getMostrarInventarioAccess() {
		return pMostrarInventario;
	}
	
	public ParserRule getMostrarInventarioRule() {
		return getMostrarInventarioAccess().getRule();
	}

	//Acciones:
	//	"acciones" objeto=[Objeto] "?";
	public AccionesElements getAccionesAccess() {
		return pAcciones;
	}
	
	public ParserRule getAccionesRule() {
		return getAccionesAccess().getRule();
	}

	//EjecutarAccion:
	//	"accion" accion=[IrA] ("a" | "al" | "a la") objeto=[Objeto] | "accion" accion=[Accion] objeto=[Objeto];
	public EjecutarAccionElements getEjecutarAccionAccess() {
		return pEjecutarAccion;
	}
	
	public ParserRule getEjecutarAccionRule() {
		return getEjecutarAccionAccess().getRule();
	}

	//Accion:
	//	IrA | CambiarEstado;
	public AccionElements getAccionAccess() {
		return pAccion;
	}
	
	public ParserRule getAccionRule() {
		return getAccionAccess().getRule();
	}

	//IrA:
	//	"accion" name=ID "hace ir a" habitacion=[Habitacion] ("cuando" variable=[EstadoDeObjeto] "es" valor=STRING)?;
	public IrAElements getIrAAccess() {
		return pIrA;
	}
	
	public ParserRule getIrARule() {
		return getIrAAccess().getRule();
	}

	//CambiarEstado:
	//	"accion" name=ID "hace cambiar el" variableACambiar=[EstadoDeObjeto] "al valor" valorNuevo=STRING "cuando"
	//	variableCondicion=[EstadoDeObjeto] "es" valorCondicional=STRING;
	public CambiarEstadoElements getCambiarEstadoAccess() {
		return pCambiarEstado;
	}
	
	public ParserRule getCambiarEstadoRule() {
		return getCambiarEstadoAccess().getRule();
	}

	//EstadoDeObjeto:
	//	name=ID ("con valor" valor=STRING)?;
	public EstadoDeObjetoElements getEstadoDeObjetoAccess() {
		return pEstadoDeObjeto;
	}
	
	public ParserRule getEstadoDeObjetoRule() {
		return getEstadoDeObjetoAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
